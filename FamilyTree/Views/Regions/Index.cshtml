@* @model IEnumerable<FamilyTree.Models.Region> *@
@model	PaginatedList<FamilyTree.Models.Region>

@{
	ViewData["Title"] = "Index";
}

<h1>Index</h1>



<p>
	<a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
	<div class="form-actions no-color">
		<p>
			Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
			<input type="submit" value="Search" class="btn btn-default" />
		</p>
	</div>
</form>

<table class="table">
	<thead>
		<tr>
			<th>
				地区Id
			</th>
			<th>
				省份
			</th>
			<th>
				地级市
			</th>
			<th>
				区/县
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.RegionId)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ProvinceName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.CityName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.DistrictName)
				</td>
				<td>
					<a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
					<a asp-action="Details" asp-route-id="@item.Id">Details</a> |
					<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>

@{
	var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
	var nextDisabled = !Model.HasNextPage ? "disabled" : "";

}



<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
	Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
	Next
</a>
